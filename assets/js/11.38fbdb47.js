(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{59:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://git-scm.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git"),a("OutboundLink")],1),t._v(" 是一个分布式版本管理工具。通常采用git命令行工具跟 "),a("a",{attrs:{href:"https://www.syntevo.com/smartgit",target:"_blank",rel:"noopener noreferrer"}},[t._v("Smartgit"),a("OutboundLink")],1),t._v(" 混合使用。\nSmartgit用来看log和处理版本冲突非常简单。")]),t._v(" "),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),a("h3",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),a("h3",{attrs:{id:"提交代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交代码"}},[t._v("#")]),t._v(" 提交代码")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"First commit"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),a("h3",{attrs:{id:"pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[t._v("#")]),t._v(" Pull")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n")])])]),a("h3",{attrs:{id:"merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[t._v("#")]),t._v(" Merge")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("通常情况下请不要使用 "),a("code",[t._v("git rebase")]),t._v(" 命令来合并分支，它会修改commit记录顺序，多人合作中容易产生冲突。请使用 "),a("code",[t._v("git merge")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/master "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将master分支代码合并到本分支")]),t._v("\n")])])]),a("h4",{attrs:{id:"squash-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squash-merge"}},[t._v("#")]),t._v(" Squash Merge")]),t._v(" "),a("p",[a("code",[t._v("Squash Merge")]),t._v(" 类似Cherry-pick，提交之后只会有一条commit记录，这样子才能保证git log是一条直线。")]),t._v(" "),a("p",[a("code",[t._v("git commit")]),t._v(" 加author参数保证xxx-branch分支原始作者仍然存在在log中。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/xxx-branch —squash \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Test message"')]),t._v(" --author"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Nick <my.adress@email.com>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),a("h3",{attrs:{id:"branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#branch"}},[t._v("#")]),t._v(" Branch")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch wbk-fix-product-add-error "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建wbk-fix-product-add-error分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到test分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch wbk-fix-product-add-error -D "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除wbk-fix-product-add-error分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard origin/master "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置当前目录代码跟远程分支master保持一致")]),t._v("\n")])])]),a("h3",{attrs:{id:"config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[t._v("#")]),t._v(" Config")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wenbinke@gmail.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wenbinke"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local --get user.email\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local --get user.name\n")])])]),a("h3",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前目录git状态")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销修改")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:git/git.git "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clone远程代码")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch --prune "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取代码，更新remote branch列表")]),t._v("\n")])])]),a("h2",{attrs:{id:"git-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-flow"}},[t._v("#")]),t._v(" Git-flow")]),t._v(" "),a("h3",{attrs:{id:"master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master"}},[t._v("#")]),t._v(" master")]),t._v(" "),a("p",[a("code",[t._v("master")]),t._v(" 是稳定分支，这上面的代码一定是稳定可发布的。")]),t._v(" "),a("p",[a("code",[t._v("staging")]),t._v(" 和 "),a("code",[t._v("production")]),t._v(" 环境均使用 "),a("code",[t._v("master")]),t._v(" 分支代码。")]),t._v(" "),a("h3",{attrs:{id:"test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[t._v("#")]),t._v(" test")]),t._v(" "),a("p",[t._v("所有需要测试的开发分支均合并到 "),a("code",[t._v("test")]),t._v(" 分支上并部署到 "),a("code",[t._v("test")]),t._v(" 环境。")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[a("code",[t._v("test")]),t._v(" 分支是一个只进不出的分支。勿把 "),a("code",[t._v("test")]),t._v(" 分支上的代码切去做开发或合并到 "),a("code",[t._v("master")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"开发分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发分支"}},[t._v("#")]),t._v(" 开发分支")]),t._v(" "),a("p",[t._v("开发分支都从 "),a("code",[t._v("master")]),t._v(" 切出新分支来开发，并且定期把 "),a("code",[t._v("master")]),t._v(" 上最新代码合并到自己的分支上。")]),t._v(" "),a("p",[t._v("开发分支在经过 "),a("code",[t._v("test")]),t._v(" 环境和 "),a("code",[t._v("code review")]),t._v(" 之后通过 "),a("code",[t._v("squash")]),t._v(" 的方式合并到 "),a("code",[t._v("master")]),t._v(" 分支，然后上 "),a("code",[t._v("staging")]),t._v(" 环境测试通过之后再发布到 "),a("code",[t._v("production")]),t._v(" 环境。稳定的master版本可以打 "),a("code",[t._v("tag")]),t._v("。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("约定")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("分支名字统一采用小写加 "),a("code",[t._v("-")]),t._v(" 相连。")])]),t._v(" "),a("li",[a("p",[t._v("多人合作中建议采用开发者姓名第一个字母做为分支前缀，比如开发者 "),a("code",[t._v("Wenbin Ke")]),t._v(" 创建的branch名为 "),a("code",[t._v("wbk-test-branch")]),t._v("，这样子可以清晰的知道谁创建了哪几个分支，开发人员自己切换分支敲前缀的时候就可以根据智能提示快速切换到自己的分支。")])]),t._v(" "),a("li",[a("p",[t._v("所有的开发分支在合并之后都要被删除。")])])])]),t._v(" "),a("h2",{attrs:{id:"合并commits"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并commits"}},[t._v("#")]),t._v(" 合并Commits")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("修改commit记录非常规操作，没事不要去修改commit记录和做 "),a("code",[t._v("force push")]),t._v(" 操作，多人合作中容易冲突。")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i HEAD~2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并最后两条commit记录")]),t._v("\n")])])]),a("p",[t._v("运行以上命令出现以下界面:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pick 3de8ed0 Fix it "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最后一个commit记录")]),t._v("\npick 32584e5 Fix "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 倒数第二个commit记录")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase d284beb..32584e5 onto d284beb (2 commands)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commands:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# p, pick = use commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r, reword = use commit, but edit the commit message")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e, edit = use commit, but stop for amending")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# s, squash = use commit, but meld into previous commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# f, fixup = like "squash", but discard this commit\'s log message')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x, exec = run command (the rest of the line) using shell")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# d, drop = remove commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These lines can be re-ordered; they are executed from top to bottom.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),a("p",[t._v("将第二行 "),a("code",[t._v("pick")]),t._v(" 改成 "),a("code",[t._v("f")]),t._v(" 保存退出后执行 "),a("code",[t._v("git push -f")]),t._v(" 即可。放弃操作则执行 "),a("code",[t._v("git rebase --abort")]),t._v("。")])])}),[],!1,null,null,null);s.default=r.exports}}]);